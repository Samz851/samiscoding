function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var i=arguments[e];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}return t}).apply(this,arguments)}function _defineProperties(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,i){return e&&_defineProperties(t.prototype,e),i&&_defineProperties(t,i),t}var Modal=function(a){var e="modal",r="bs.modal",i="."+r,t=a.fn[e],n={backdrop:!0,keyboard:!0,focus:!0,show:!0},o={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},d={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,FOCUSIN:"focusin"+i,RESIZE:"resize"+i,CLICK_DISMISS:"click.dismiss"+i,KEYDOWN_DISMISS:"keydown.dismiss"+i,MOUSEUP_DISMISS:"mouseup.dismiss"+i,MOUSEDOWN_DISMISS:"mousedown.dismiss"+i,CLICK_DATA_API:"click"+i+".data-api"},l="modal-scrollbar-measure",h="modal-backdrop",c="modal-open",_="fade",u="show",g=".modal-dialog",s='[data-toggle="modal"]',f='[data-dismiss="modal"]',m=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",p=".sticky-top",S=".navbar-toggler",v=function(){function s(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=a(t).find(g)[0],this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._originalBodyPadding=0,this._scrollbarWidth=0}var t=s.prototype;return t.toggle=function(t){return this._isShown?this.hide():this.show(t)},t.show=function(t){var e=this;if(!this._isTransitioning&&!this._isShown){Util.supportsTransitionEnd()&&a(this._element).hasClass(_)&&(this._isTransitioning=!0);var i=a.Event(d.SHOW,{relatedTarget:t});a(this._element).trigger(i),this._isShown||i.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),a(document.body).addClass(c),this._setEscapeEvent(),this._setResizeEvent(),a(this._element).on(d.CLICK_DISMISS,f,function(t){return e.hide(t)}),a(this._dialog).on(d.MOUSEDOWN_DISMISS,function(){a(e._element).one(d.MOUSEUP_DISMISS,function(t){a(t.target).is(e._element)&&(e._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return e._showElement(t)}))}},t.hide=function(t){var e=this;if(t&&t.preventDefault(),!this._isTransitioning&&this._isShown){var i=a.Event(d.HIDE);if(a(this._element).trigger(i),this._isShown&&!i.isDefaultPrevented()){this._isShown=!1;var n=Util.supportsTransitionEnd()&&a(this._element).hasClass(_);n&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),a(document).off(d.FOCUSIN),a(this._element).removeClass(u),a(this._element).off(d.CLICK_DISMISS),a(this._dialog).off(d.MOUSEDOWN_DISMISS),n?a(this._element).one(Util.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(300):this._hideModal()}}},t.dispose=function(){a.removeData(this._element,r),a(window,document,this._element,this._backdrop).off(i),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._scrollbarWidth=null},t.handleUpdate=function(){this._adjustDialog()},t._getConfig=function(t){return t=_extends({},n,t),Util.typeCheckConfig(e,t,o),t},t._showElement=function(t){var e=this,i=Util.supportsTransitionEnd()&&a(this._element).hasClass(_);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,i&&Util.reflow(this._element),a(this._element).addClass(u),this._config.focus&&this._enforceFocus();function n(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,a(e._element).trigger(s)}var s=a.Event(d.SHOWN,{relatedTarget:t});i?a(this._dialog).one(Util.TRANSITION_END,n).emulateTransitionEnd(300):n()},t._enforceFocus=function(){var e=this;a(document).off(d.FOCUSIN).on(d.FOCUSIN,function(t){document!==t.target&&e._element!==t.target&&0===a(e._element).has(t.target).length&&e._element.focus()})},t._setEscapeEvent=function(){var e=this;this._isShown&&this._config.keyboard?a(this._element).on(d.KEYDOWN_DISMISS,function(t){27===t.which&&(t.preventDefault(),e.hide())}):this._isShown||a(this._element).off(d.KEYDOWN_DISMISS)},t._setResizeEvent=function(){var e=this;this._isShown?a(window).on(d.RESIZE,function(t){return e.handleUpdate(t)}):a(window).off(d.RESIZE)},t._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._isTransitioning=!1,this._showBackdrop(function(){a(document.body).removeClass(c),t._resetAdjustments(),t._resetScrollbar(),a(t._element).trigger(d.HIDDEN)})},t._removeBackdrop=function(){this._backdrop&&(a(this._backdrop).remove(),this._backdrop=null)},t._showBackdrop=function(t){var e=this,i=a(this._element).hasClass(_)?_:"";if(this._isShown&&this._config.backdrop){var n=Util.supportsTransitionEnd()&&i;if(this._backdrop=document.createElement("div"),this._backdrop.className=h,i&&a(this._backdrop).addClass(i),a(this._backdrop).appendTo(document.body),a(this._element).on(d.CLICK_DISMISS,function(t){e._ignoreBackdropClick?e._ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"===e._config.backdrop?e._element.focus():e.hide())}),n&&Util.reflow(this._backdrop),a(this._backdrop).addClass(u),!t)return;if(!n)return void t();a(this._backdrop).one(Util.TRANSITION_END,t).emulateTransitionEnd(150)}else if(!this._isShown&&this._backdrop){a(this._backdrop).removeClass(u);function s(){e._removeBackdrop(),t&&t()}Util.supportsTransitionEnd()&&a(this._element).hasClass(_)?a(this._backdrop).one(Util.TRANSITION_END,s).emulateTransitionEnd(150):s()}else t&&t()},t._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},t._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},t._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=t.left+t.right<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},t._setScrollbar=function(){var s=this;if(this._isBodyOverflowing){a(m).each(function(t,e){var i=a(e)[0].style.paddingRight,n=a(e).css("padding-right");a(e).data("padding-right",i).css("padding-right",parseFloat(n)+s._scrollbarWidth+"px")}),a(p).each(function(t,e){var i=a(e)[0].style.marginRight,n=a(e).css("margin-right");a(e).data("margin-right",i).css("margin-right",parseFloat(n)-s._scrollbarWidth+"px")}),a(S).each(function(t,e){var i=a(e)[0].style.marginRight,n=a(e).css("margin-right");a(e).data("margin-right",i).css("margin-right",parseFloat(n)+s._scrollbarWidth+"px")});var t=document.body.style.paddingRight,e=a("body").css("padding-right");a("body").data("padding-right",t).css("padding-right",parseFloat(e)+this._scrollbarWidth+"px")}},t._resetScrollbar=function(){a(m).each(function(t,e){var i=a(e).data("padding-right");void 0!==i&&a(e).css("padding-right",i).removeData("padding-right")}),a(p+", "+S).each(function(t,e){var i=a(e).data("margin-right");void 0!==i&&a(e).css("margin-right",i).removeData("margin-right")});var t=a("body").data("padding-right");void 0!==t&&a("body").css("padding-right",t).removeData("padding-right")},t._getScrollbarWidth=function(){var t=document.createElement("div");t.className=l,document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},s._jQueryInterface=function(i,n){return this.each(function(){var t=a(this).data(r),e=_extends({},s.Default,a(this).data(),"object"==typeof i&&i);if(t||(t=new s(this,e),a(this).data(r,t)),"string"==typeof i){if(void 0===t[i])throw new TypeError('No method named "'+i+'"');t[i](n)}else e.show&&t.show(n)})},_createClass(s,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return n}}]),s}();return a(document).on(d.CLICK_DATA_API,s,function(t){var e,i=this,n=Util.getSelectorFromElement(this);n&&(e=a(n)[0]);var s=a(e).data(r)?"toggle":_extends({},a(e).data(),a(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var o=a(e).one(d.SHOW,function(t){t.isDefaultPrevented()||o.one(d.HIDDEN,function(){a(i).is(":visible")&&i.focus()})});v._jQueryInterface.call(a(e),s,this)}),a.fn[e]=v._jQueryInterface,a.fn[e].Constructor=v,a.fn[e].noConflict=function(){return a.fn[e]=t,v._jQueryInterface},v}($);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
